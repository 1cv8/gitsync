
#Использовать logos
#Использовать fs
Перем Лог;

Процедура ПередСборкой(Знач РабочийКаталог) Экспорт

		ФС.ОбеспечитьПустойКаталог(ОбъединитьПути(РабочийКаталог, "oscript_modules"));

	Лог.Информация("Установка локальных зависимостей библиотек");
	КомандаOpm = Новый Команда;

	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("install -l");	

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

	Лог.Информация("Настройка локальных библиотек");
	
	ПутьКФайлуЗагрузчику = ОбъединитьПути(РабочийКаталог, "oscript_modules", "package-loader.os");
	ШаблонныйФайлЗагрузчик = ОбъединитьПути(РабочийКаталог, "templates", "package-loader.os");
	ФайлЗагрузчик = Новый Файл(ПутьКФайлуЗагрузчику);
	Если Не ФайлЗагрузчик.Существует() Тогда
		КопироватьФайл(ШаблонныйФайлЗагрузчик, ПутьКФайлуЗагрузчику);
		Лог.Информация("Добавлен файл загрузки локальных библиотек");
	КонецЕсли;
	
	ПутьКФайлуНастройкиСкрипта = ОбъединитьПути(РабочийКаталог, "src", "cmd", "oscript.cfg");
	ШаблонныйФайлНастройкиСкрипта = ОбъединитьПути(РабочийКаталог, "templates", "oscript.cfg");
	ФайлНастройкиСкрипта= Новый Файл(ПутьКФайлуНастройкиСкрипта);
	Если Не ФайлНастройкиСкрипта.Существует() Тогда
		КопироватьФайл(ШаблонныйФайлНастройкиСкрипта, ПутьКФайлуНастройкиСкрипта);
		Лог.Информация("Добавлен файл настройки запуска");
	КонецЕсли;

	ФС.ОбеспечитьПустойКаталог(ОбъединитьПути(РабочийКаталог, "embedded_plugins"));

	КомандаOpm = Новый Команда;
	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("run get-plugins");	

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

	Лог.Информация("Настройка локальных библиотек - завершена");

КонецПроцедуры

Процедура ПослеСборки(Знач РабочийКаталог, Знач ПутьКФайлуПакета) Экспорт

	ПутьКФайлуНастройкиСкрипта = ОбъединитьПути(РабочийКаталог, "src", "cmd", "oscript.cfg");
	ФайлНастройкиСкрипта= Новый Файл(ПутьКФайлуНастройкиСкрипта);
	Если  ФайлНастройкиСкрипта.Существует() Тогда
		УдалитьФайлы(ПутьКФайлуНастройкиСкрипта);
	КонецЕсли;

	ФС.ОбеспечитьПустойКаталог(ОбъединитьПути(РабочийКаталог, "oscript_modules"));

КонецПроцедуры

Лог = Логирование.ПолучитьЛог(ПараметрыСистемыOpm.ИмяЛогаСистемы());

ПутьКСценариюПараметров = ОбъединитьПути(ТекущийСценарий().Каталог, "src/cmd", "Модули", "ПараметрыПриложения.os");
ПараметрыСистемы_ЛокальнаяВерсия = ЗагрузитьСценарий(ПутьКСценариюПараметров);
ИмяПродукта = НРег(ПараметрыСистемы_ЛокальнаяВерсия.ИмяПриложения());
ВерсияПродукта = ПараметрыСистемы_ЛокальнаяВерсия.Версия(); 

Описание.Имя(ИмяПродукта)
		.Версия(ВерсияПродукта)
		.ВерсияСреды("1.0.20")
		.ЗависитОт("logos", "1.1.1")
		.ЗависитОт("tempfiles", "0.2.2")
		.ЗависитОт("v8runner", "1.1.3")
		.ЗависитОт("gitrunner", "1.5.1")
		.ЗависитОт("strings", "0.4.1")
		.ЗависитОт("1commands", "1.3.4")
		.ЗависитОт("json", "1.0.1")
		.ЗависитОт("fs", "0.4.1")
		.ЗависитОт("delegate", "0.2.0")
		.ЗависитОт("v8storage", "0.6.5")
		.ЗависитОт("reflector", "0.4.0")
		.ЗависитОт("opm", "0.14.1")
		.ЗависитОт("cli", "0.9.8")
		.ЗависитОт("configor", "0.5.2")
		.ВключитьФайл("src")
		.ВключитьФайл("docs")
		.ВключитьФайл("embedded_plugins")
		.ВключитьФайл("oscript_modules")
		.ВключитьФайл("readme.md")
		.ОпределяетКласс("МенеджерСинхронизации", "src/core/Классы/МенеджерСинхронизации.os")
		.ОпределяетКласс("УправлениеПлагинами", "src/core/Классы/УправлениеПлагинами.os")
		.ИсполняемыйФайл("src/cmd/gitsync.os", ИмяПродукта);
