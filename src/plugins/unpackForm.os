#Использовать logos

Перем ВерсияПлагина;
Перем Лог;
Перем Обработчик;
Перем КомандыПлагина;

Перем ВыполнятьПереименование;

Функция ОписаниеПлагина() Экспорт

	Возврат Новый Структура("Версия, Лог, ИмяПакета", ВерсияПлагина, Лог, ИмяПлагина())

КонецФункции // Информация() Экспорт

Процедура ПриАктивизацииПлагина(СтандартныйОбработчик) Экспорт

	Обработчик = СтандартныйОбработчик;
	ВыполнятьПереименование = Ложь;

КонецПроцедуры

Процедура ПриРегистрацииКомандыПриложения(ИмяКоманды, КлассРеализации, Парсер) Экспорт

	Лог.Отладка("Ищю команду <%1> в списке поддерживаемых", ИмяКоманды);
	Если КомандыПлагина.Найти(ИмяКоманды) = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Лог.Отладка("Устанавливаю дополнительные параметры для команды %1", ИмяКоманды);
	
	КлассРеализации.Опция("R rename-module", Ложь, "[*unpackForm] переименование module -> module.bsl").Флаг().ВОкружении("GITSYNC_RENAME_MODULE");

КонецПроцедуры

Процедура ПриПолученииПараметров(ПараметрыКоманды, ДополнительныеПараметры) Экспорт

	ВыполнятьПереименование = ПараметрыКоманды["--rename-module"];

	Если ВыполнятьПереименование = Неопределено Тогда
		ВыполнятьПереименование = Ложь;
	КонецЕсли;

КонецПроцедуры

Процедура ПередПеремещениемВКаталогРабочейКопии(Конфигуратор, КаталогРабочейКопии, КаталогВыгрузки, ПутьКХранилищу, НомерВерсии, Формат) Экспорт
	
	СписокФайлов = НайтиФайлы(КаталогВыгрузки, "form.bin", Истина);
	Лог.Отладка("Найдено файлов form.bin: "+СписокФайлов.Количество()+" шт.");
	Для Каждого ФайлФормы Из СписокФайлов Цикл

		НовыйКаталог = Новый Файл(ФайлФормы.Путь);
		
		КаталогФормы = ОбъединитьПути(НовыйКаталог.ПолноеИмя, ФайлФормы.ИмяБезРасширения);
		СоздатьКаталог(КаталогФормы);

		РаспаковатьКонтейнерМетаданных(ФайлФормы.ПолноеИмя, КаталогФормы);

	КонецЦикла;

КонецПроцедуры

// хитрость: надо выносить в отдельную процедуру, 
// а сборку мусора делать в другом кадре стека вызовов.
// иначе сборка ничего не соберет
//
Процедура dllРаспаковать(Знач ФайлРаспаковки, Знач КаталогРаспаковки)
		
	Распаковщик = Новый ЧтениеФайла8(ФайлРаспаковки);
	Распаковщик.ИзвлечьВсе(КаталогРаспаковки, Истина);
	ОсвободитьОбъект(Распаковщик); // почему-то этого недостаточно. Вопрос к реализации компоненты.
	Распаковщик = Неопределено;
	
КонецПроцедуры

Процедура РаспаковатьКонтейнерМетаданных(Знач ФайлРаспаковки, Знач КаталогРаспаковки)

	dllРаспаковать(ФайлРаспаковки, КаталогРаспаковки);
	ВыполнитьСборкуМусора(); // см. камент к процедуре dllРаспаковать

	Если ВыполнятьПереименование Тогда
		ПереименованиеModule(КаталогРаспаковки)
	КонецЕсли;

КонецПроцедуры

Процедура ПереименованиеModule(КаталогРаспаковки)

	Для Каждого ФайлМодуля Из НайтиФайлы(КаталогРаспаковки, "module", Истина) Цикл

		СтароеИмяФайла = ФайлМодуля.ПолноеИмя;
		НовоеИмяФайла = ОбъединитьПути(ФайлМодуля.Путь, "Module.bsl");
		
		Лог.Отладка("Конвертирую наименование файла <%1> --> <%2>", СтароеИмяФайла, НовоеИмяФайла);
		КопироватьФайл(СтароеИмяФайла, НовоеИмяФайла);
		УдалитьФайлы(СтароеИмяФайла);
		
	КонецЦикла;

КонецПроцедуры

Функция ИмяПлагина()
	возврат "unpackForm";
КонецФункции // ИмяПлагина()

Процедура Инициализация()

	ВерсияПлагина = "1.0.0";
	Лог = Логирование.ПолучитьЛог("oscript.app.gitsync_plugins_"+ СтрЗаменить(ИмяПлагина(),"-", "_"));
	КомандыПлагина = Новый Массив;
	КомандыПлагина.Добавить("sync");

КонецПроцедуры

Инициализация();
