#Использовать logos

Перем ВерсияПлагина;
Перем Лог;

Перем ПоследнняяВерсияКонфигурации;
Перем НоваяМетка;

Функция Информация() Экспорт
	
	Возврат Новый Структура("Версия, Лог", ВерсияПлагина, Лог)
	
КонецФункции // Информация() Экспорт

Процедура ПередНачаломЦиклаОбработкиВерсий(ТаблицаИсторииХранилища, ТекущаяВерсия, СледующаяВерсия, МаксимальнаяВерсияДляРазбора, КонтекстПлагина) Экспорт
	
	СтрокаТекущейВерсии = ТаблицаИсторииХранилища.Найти(СледующаяВерсия, "НомерВерсии");
	ОтправитьНовыеМетки = Ложь;
	Если СтрокаТекущейВерсии <> Неопределено Тогда
		ПоследнняяВерсияКонфигурации = СтрокаТекущейВерсии.Тэг;
	КонецЕсли;

КонецПроцедуры

Процедура ПередОбработкойВерсииХранилища(СтрокаВерсии, СледующаяВерсия, КонтекстПлагина) Экспорт	

	НоваяМетка = "";
	Если ПоследнняяВерсияКонфигурации <> СтрокаВерсии.Тэг Тогда
		ОтправитьНовыеМетки = Истина;
		Лог.Информация("Определена новая версия конфигурации: %1 будет установлен новый тэг", СтрокаВерсии.Тэг);
		НоваяМетка = СтрокаВерсии.Тэг;
		ПоследнняяВерсияКонфигурации = НоваяМетка;
	КонецЕсли;

КонецПроцедуры

Процедура ПослеКоммита(ГитРепозиторий, КаталогРабочейКопии, КонтекстПлагина) Экспорт
	
	Если ЗначениеЗаполнено(НоваяМетка) Тогда
		ПараметрыКоманды = Новый Массив;
		ПараметрыКоманды.Добавить("tag");
		ПараметрыКоманды.Добавить(Строка(НоваяМетка));
	
		ГитРепозиторий.ВыполнитьКоманду(ПараметрыКоманды);
		
	КонецЕсли;

КонецПроцедуры


Процедура Инициализация()

	ВерсияПлагина = "1.0.0";
	Лог = Логирование.ПолучитьЛог("auto-set-tags");
	ПоследнняяВерсияКонфигурации = Неопределено;

КонецПроцедуры

Инициализация();