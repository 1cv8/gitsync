Перем Наименование;
Перем ПутьКХранилищу;
Перем ПутьРабочемуКаталогу;
Перем ПутьИсполняемомуФайлуГит;
Перем ПутьКВременномуКаталогу;
Перем ВерсияПлатформы;
Перем ДоменПочтыПоУмолчанию;
Перем ПользовательХранилища;
Перем ПарольПользователяХранилища;
Перем УровеньЛогаСинхронизации;
Перем КоличествоЦикловОжиданияЛицензии;

Перем ИндексПодписчиков;
Перем ПараметрыПодписчиков;

Перем МенеджерСинхронизации;
Перем КаталогПлагинов;
Перем ПутьКФайлуВключенныхПлагинов;
Перем ЛокальноеУправлениеПлагинами;

Процедура Синхронизировать() Экспорт

	НастроитьМенеджерСинхронизации();

	Если МенеджерСинхронизации.ТребуетсяСинхронизироватьХранилищеСГит(ПутьРабочемуКаталогу, ПутьКХранилищу) Тогда

		МенеджерСинхронизации.Синхронизировать(ПутьРабочемуКаталогу, ПутьКХранилищу);

	КонецЕсли;

КонецПроцедуры

Процедура НастроитьМенеджерСинхронизации()
	
	Если МенеджерСинхронизации = Неопределено Тогда
		МенеджерСинхронизации = Новый МенеджерСинхронизации();
	КонецЕсли;

	МенеджерСинхронизации.ВерсияПлатформы(ВерсияПлатформы)
						.ДоменПочтыПоУмолчанию(ДоменПочтыПоУмолчанию)
						.ИсполняемыйФайлГит(ПутьИсполняемомуФайлуГит)
						.ПодпискиНаСобытия(ИндексПодписчиков)
						.ПараметрыПодписокНаСобытия(ПараметрыПодписчиков)
						.УровеньЛога(УровеньЛогаСинхронизации)
						.ЦикловОжиданияЛицензии(КоличествоЦикловОжиданияЛицензии)
						.АвторизацияВХранилищеКонфигурации(ПользовательХранилища, ПарольПользователяХранилища);

КонецПроцедуры

// Устанавливает путь к каталогу плагинов
//
// Параметры:
//   НовыйКаталогПлагинов - Строка - путь к каталогу плагинов
//
// Возвращаемое значение:
//   Объект.МенеджерСинхронизации - ссылка на текущий объект класса <МенеджерСинхронизации>
//
Функция КаталогПлагинов(Знач НовыйКаталогПлагинов) Экспорт
	КаталогПлагинов = НовыйКаталогПлагинов;
	Возврат ЭтотОбъект;
КонецФункции

// Устанавливает уровень вывода логов
//
// Параметры:
//   НовыйУровеньЛога - Строка - уровень вывода лога
//
// Возвращаемое значение:
//   Объект.МенеджерСинхронизации - ссылка на текущий объект класса <МенеджерСинхронизации>
//
Функция УровеньЛога(Знач НовыйУровеньЛога) Экспорт

	УровеньЛогаСинхронизации = НовыйУровеньЛога;
	Возврат ЭтотОбъект;

КонецФункции

// Устанавливает путь к файлу включенных плагинов
//
// Параметры:
//   НовыйПутьКФайлуВключенныхПлагинов - Строка - путь к файлу включенных плагинов
//
// Возвращаемое значение:
//   Объект.МенеджерСинхронизации - ссылка на текущий объект класса <МенеджерСинхронизации>
//
Функция ФайлВключенныхПлагинов(Знач НовыйПутьКФайлуВключенныхПлагинов) Экспорт
	ПутьКФайлуВключенныхПлагинов = НовыйПутьКФайлуВключенныхПлагинов;
	Возврат ЭтотОбъект;
КонецФункции

Процедура ПрочитатьПараметры(Знач ВходящиеПараметры) Экспорт

	Наименование = ВходящиеПараметры.Наименование;
	ПользовательХранилища = ВходящиеПараметры.ПользовательХранилища;
	ПарольПользователяХранилища = ВходящиеПараметры.ПарольПользователяХранилища;
	ПутьКХранилищу = ВходящиеПараметры.ПутьКХранилищу;
	ПутьРабочемуКаталогу = ВходящиеПараметры.ПутьРабочемуКаталогу;
	ПутьИсполняемомуФайлуГит = ВходящиеПараметры.ПутьИсполняемомуФайлуГит;
	ПутьКВременномуКаталогу = ВходящиеПараметры.ПутьКВременномуКаталогу;
	ДоменПочтыПоУмолчанию = ВходящиеПараметры.ДоменПочтыПоУмолчанию;
	КоличествоЦикловОжиданияЛицензии = КоличествоЦикловОжиданияЛицензии;
		
	ПрочитатьПлагины(ВходящиеПараметры.Плагины);

	ПараметрыПодписчиков = ВходящиеПараметры.НастройкиПлагинов;

КонецПроцедуры

Процедура ПрочитатьПлагины(Знач НастройкаПлагинов)
	
	ИнициализироватьУправлениеПлагинами();

	ЛокальноеУправлениеПлагинами.ВключитьПлагины(НастройкаПлагинов.ВключенныеПлагины);
	ЛокальноеУправлениеПлагинами.ВключитьПлагины(НастройкаПлагинов.ДополнительныеПлагины);
	ЛокальноеУправлениеПлагинами.ОтключитьПлагины(НастройкаПлагинов.ОтключенныеПлагины);

	ИндексПодписчиков = ЛокальноеУправлениеПлагинами.ПолучитьИндексПлагинов();

КонецПроцедуры

Процедура ИнициализироватьУправлениеПлагинами()
	
	Если ЛокальноеУправлениеПлагинами = Неопределено Тогда

		ЛокальноеУправлениеПлагинами = Новый УправлениеПлагинами;
		ЛокальноеУправлениеПлагинами.УстановитьКаталогПлагинов(КаталогПлагинов);
		ЛокальноеУправлениеПлагинами.УстановитьФайлВключенныхПлагинов(ПутьКФайлуВключенныхПлагинов);
		ЛокальноеУправлениеПлагинами.ЗагрузитьПлагины();
			
	КонецЕсли;

КонецПроцедуры

Процедура ПриСозданииОбъекта()

	// .ПолеМассив("Плагины plugins", ПараметрыПлагины);
	// .ПолеМассив("НастройкиПлагинов plugins-config", Тип("Строка"))


	
КонецПроцедуры
