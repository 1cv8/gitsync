#Использовать reflector
#Использовать delegate

Перем ИмяПлагина; // Строка - Имя плагина
Перем ВерсияПлагина; // Строка - текущая версия плагина
Перем ОписаниеПлагина; // Строка - описание плагина для справки

Перем РеализованныеМетоды; // Структура - набор реализованних методов
Перем ПлагинВключен; // Булево, признак того что плагин включен
Перем ИндексДелегатов; // Соответствие - кеш вызванных делегатов
Перем КлассПлагина; // Объект - ссылка на плагин
Перем ИмяКлассаПлагина; // Строка имя класса плагина
Перем Лог; // Объект ллогирования

Функция Имя() Экспорт
	Возврат ИмяПлагина;
КонецФункции

Функция Версия() Экспорт
	Возврат ВерсияПлагина;
КонецФункции

Функция Описание() Экспорт
	Возврат ОписаниеПлагина;
КонецФункции

Процедура Отключить() Экспорт
	ПлагинВключен = Ложь;
КонецПроцедуры

Процедура Включить() Экспорт
	ПлагинВключен = Истина;
КонецПроцедуры

Функция Включен() Экспорт
	Возврат ПлагинВключен;
КонецФункции

Процедура ВключитьОтладку() Экспорт

	Лог.УстановитьУровень(УровниЛога.Отладка);
	
КонецПроцедуры

Процедура ВыполнитьПодписку(Знач ИмяМетода, НаборПараметров) Экспорт
	
	Если Не ПлагинВключен Тогда
		Возврат;
	КонецЕсли;

	Если Не МетодРеализован(ИмяМетода) Тогда
		Возврат;
	КонецЕсли;

	ВыполнитьДелегата(ИмяМетода, НаборПараметров);

КонецПроцедуры

Функция МетодРеализован(Знач ИмяМетода)
	
	СтатусМетода = РеализованныеМетоды[ИмяМетода];
	
	Возврат СтатусМетода;

КонецФункции

Процедура ВыполнитьДелегата(Знач ИмяМетода, НаборПараметров)

	Если КлассПлагина = Неопределено Тогда
		СоздатьКлассПлагина();
	КонецЕсли;

	ДелегатМетода = ПолучитьДелегата(ИмяМетода);

	ДелегатМетода.Исполнить(НаборПараметров);

КонецПроцедуры

Функция ПолучитьДелегата(Знач ИмяМетода)
	
	ДелегатМетода = ИндексДелегатов[ИмяМетода];

	Если ДелегатМетода = Неопределено Тогда
		ДелегатМетода = Делегаты.Создать(КлассПлагина, ИмяМетода);
		ИндексДелегатов.Вставить(ИмяМетода, ДелегатМетода);
	КонецЕсли;

	Возврат ДелегатМетода;

КонецФункции

Функция ПолучитьКлассПлагина()
	Возврат Новый (ИмяКлассаПлагина);
КонецФункции

Процедура СоздатьКлассПлагина()
	КлассПлагина = ПолучитьКлассПлагина();
КонецПроцедуры

Процедура ПриСозданииОбъекта(ВходящееИмяКлассаПлагина, ИнтерфейсМетодовПлагинов)
	
	ИмяКлассаПлагина = ВходящееИмяКлассаПлагина;

	ИнтерфейсПлагина = Новый ИнтерфейсОбъекта();
	ИнтерфейсПлагина.Ф("Версия");
	ИнтерфейсПлагина.Ф("Имя");
	ИнтерфейсПлагина.Ф("Описание");
	ИнтерфейсПлагина.Ф("ИмяЛога");

	КлассПлагина = ПолучитьКлассПлагина();

	Рефлектор = Новый РефлекторОбъекта(КлассПлагина);
	ЭтоПлагин = Рефлектор.РеализуетИнтерфейс(ИнтерфейсПлагина);

	Если Не ЭтоПлагин Тогда
		ВызватьИсключение СтрШаблон("Переданный класс <%1> не реализует интерфейс плагина", ИмяКлассаПлагина);
	КонецЕсли;

	ИмяПлагина = КлассПлагина.Имя();
	ВерсияПлагина = КлассПлагина.Версия();
	ОписаниеПлагина = КлассПлагина.Описание();

	Лог = Логирование.ПолучитьЛог(КлассПлагина.ИмяЛога());
	ПлагинВключен = Ложь;
	ИндексДелегатов = Новый Соответствие;
	
	РеализованныеМетоды = Рефлектор.РеализованныеМетодыИнтерфейса(ИнтерфейсМетодовПлагинов);

КонецПроцедуры
