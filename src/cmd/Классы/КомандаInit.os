

Процедура ОписаниеКоманды(Команда) Экспорт
	
	ПутьКХранилищу = Команда.Аргумент("PATH", "", "Путь к хранилищу конфигурации 1С.");
	ЛокальныйКаталогГит = Команда.Аргумент("WORKDIR", "", "Адрес локального репозитория GIT или каталог исходников внутри локальной копии git-репозитария. По умолчанию текущий каталог")
				.ВОкружении("GITSYNC_WORKDIR")
				.Обязательный(Ложь)
				.ПоУмолчанию(ТекущийКаталог());;
	
	Команда.УстановитьДействиеПередВыполнением(ПараметрыПриложения);
	Команда.УстановитьДействиеПослеВыполнения(ПараметрыПриложения);

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	ОбщиеПараметры = ПараметрыПриложения.Параметры();
	МенеджерПлагинов = ОбщиеПараметры.МенеджерПлагинов;
	Лог = ПараметрыПриложения.Лог();
	ПутьКХранилищу			= Команда.ЗначениеАргумента("PATH");
	КаталогРабочейКопии		= Команда.ЗначениеАргумента("WORKDIR");

	Распаковщик = Новый МенеджерСинхронизации(ПараметрыПриложения, МенеджерПлагинов);
	Распаковщик.ВерсияПлатформы = ОбщиеПараметры.ВерсияПлатформы;
	// инициализировать с нуля
	ФайлКаталогРабочейКопии = Новый Файл(КаталогРабочейКопии);
	Если Не ФайлКаталогРабочейКопии.Существует() Тогда
		СоздатьКаталог(КаталогРабочейКопии);
	КонецЕсли;

	ЭтоКаталогГит = Распаковщик.ПроверитьНаличиеРепозитарияГит(КаталогРабочейКопии);
	Если Не ЭтоКаталогГит Тогда
		
		Результат = Распаковщик.ИнициализироватьРепозитарий(КаталогРабочейКопии);
		Если Результат <> 0 Тогда
			
			ВызватьИсключение "git init вернул код <" + Результат + ">";
			
		КонецЕсли;
		
	КонецЕсли;

	МассивФайлов = НайтиФайлы(КаталогРабочейКопии, "src");
	КаталогИсходников = КаталогРабочейКопии;
	Если МассивФайлов.Количество() > 0  Тогда
		КаталогИсходников = МассивФайлов[0].ПолноеИмя;
	КонецЕсли;

	Распаковщик.НаполнитьКаталогРабочейКопииСлужебнымиДанными(КаталогИсходников, ПутьКХранилищу);
	
	Лог.Информация("Инициализация завершена");
КонецПроцедуры // ВыполнитьКоманду


Функция ИмяФункции()Экспорт
	
КонецФункции

