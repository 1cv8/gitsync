Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Аргумент("URL", "", "Адрес удаленного репозитория GIT.");
	Команда.Аргумент("PATH", "", "Путь к хранилищю конфигурации 1С.");
	Команда.Аргумент("WORKDIR", "", "Каталог исходников внутри локальной копии git-репозитария.");
	
	Команда.УстановитьДействиеПередВыполнением(ПараметрыПриложения);
	Команда.УстановитьДействиеПослеВыполнения(ПараметрыПриложения);

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	ОбщиеПараметры = ПараметрыПриложения.Параметры();
	МенеджерПлагинов = ОбщиеПараметры.МенеджерПлагинов;
	
	ПутьКХранилищу			= Команда.ЗначениеАргумента("PATH");
	КаталогРабочейКопии		= Команда.ЗначениеАргумента("WORKDIR");
	URLРепозитория			= Команда.ЗначениеАргумента("URL");
	
	Распаковщик = Новый МенеджерСинхронизации(ПараметрыПриложения, МенеджерПлагинов);
	// инициализировать с нуля
	ФайлКаталогРабочейКопии = Новый Файл(КаталогРабочейКопии);
	Если Не ФайлКаталогРабочейКопии.Существует() Тогда
		СоздатьКаталог(КаталогРабочейКопии);
	КонецЕсли;

	Если ПустаяСтрока(URLРепозитория) Тогда

		ВызватьИсключение "Не указан URL репозитария";

	КонецЕсли;

	Результат = Распаковщик.КлонироватьРепозитарий(КаталогРабочейКопии, URLРепозитория);
	Если Результат <> 0 Тогда
	
		ВызватьИсключение "git clone вернул код <" + Результат + ">";

	КонецЕсли;

	Распаковщик.НаполнитьКаталогРабочейКопииСлужебнымиДанными(КаталогРабочейКопии, ПутьКХранилищу);

КонецПроцедуры // ВыполнитьКоманду


Функция ИмяФункции()Экспорт
	
КонецФункции