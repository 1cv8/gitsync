///////////////////////////////////////////////////////////////////
//
// Служебный модуль с реализацией работы команды clone
//
// Представляет собой модификацию приложения gitsync от 
// команды oscript-library
//
// Структура модуля реализована в соответствии с рекомендациями 
// oscript-app-template (C) EvilBeaver
//
///////////////////////////////////////////////////////////////////


Процедура ОписаниеКоманды(Команда) Экспорт
	
	URLРепозитория = Команда.Аргумент("URL", "", "Адрес удаленного репозитория GIT.");
	ПутьКХранилищу = Команда.Аргумент("PATH", "", "Путь к хранилищю конфигурации 1С.");
	ЛокальныйКаталогГит = Команда.Аргумент("WORKDIR", "", "Каталог исходников внутри локальной копии git-репозитария.");
	
	Команда.УстановитьДействиеПередВыполнением(ПараметрыПриложения);
	Команда.УстановитьДействиеПослеВыполнения(ПараметрыПриложения);

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	// Распаковщик = РаспаковщикКонфигурации.ПолучитьИНастроитьРаспаковщик(ПараметрыКоманды, ДополнительныеПараметры);
	// КаталогРабочейКопии = РаспаковщикКонфигурации.ПодготовитьКаталогНовойРабочейКопии(ПараметрыКоманды["ЛокальныйКаталогГит"]);

	// URL = ПараметрыКоманды["URLРепозитория"];
	// Если ПустаяСтрока(URL) Тогда

	// 	ВызватьИсключение "Не указан URL репозитария";

	// КонецЕсли;

	// СоздатьКаталог(КаталогРабочейКопии);
	// Результат = Распаковщик.КлонироватьРепозитарий(КаталогРабочейКопии, URL);
	// Если Результат <> 0 Тогда
	
	// 	ВызватьИсключение "git clone вернул код <" + Результат + ">";

	// КонецЕсли;

	// РаспаковщикКонфигурации.НаполнитьКаталогРабочейКопииСлужебнымиДанными(КаталогРабочейКопии, Распаковщик, ПараметрыКоманды["ПутьКХранилищу"]);

	//Возврат ПараметрыПриложения.РезультатыКоманд().Успех;

КонецПроцедуры // ВыполнитьКоманду


Функция ИмяФункции()Экспорт
	
КонецФункции