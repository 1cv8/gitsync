
Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Опция("c commit", Ложь, "закоммитить изменения в git");
	НомерВерсии = Команда.Аргумент("VERSION", "", "Номер версии для записи в файл.");
	ЛокальныйКаталогГит = Команда.Аргумент("WORKDIR", "", "Каталог исходников внутри локальной копии git-репозитария.").Обязательный(Ложь).ПоУмолчанию(ТекущийКаталог());;
	
	Команда.УстановитьДействиеПередВыполнением(ПараметрыПриложения);
	Команда.УстановитьДействиеПослеВыполнения(ПараметрыПриложения);

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	ОбщиеПараметры = ПараметрыПриложения.Параметры();
	МенеджерПлагинов = ОбщиеПараметры.МенеджерПлагинов;
	
	НомерВерсии				= Команда.ЗначениеАргумента("VERSION");
	КаталогРабочейКопии		= Команда.ЗначениеАргумента("WORKDIR");

	ВызватьКоммит		= Команда.ЗначениеОпции("-c");

	Распаковщик = Новый МенеджерСинхронизации(ПараметрыПриложения, МенеджерПлагинов);
	Распаковщик.ВерсияПлатформы = ОбщиеПараметры.ВерсияПлатформы;
	
	ФайлВерсий = Новый Файл(ОбъединитьПути(КаталогРабочейКопии, "VERSION"));
	Распаковщик.ЗаписатьФайлВерсийГит(ФайлВерсий.Путь, НомерВерсии);

	Если ВызватьКоммит Тогда
		ГитРепозиторий = Распаковщик.ПолучитьГитРепозиторий(КаталогРабочейКопии);
		ГитРепозиторий.ДобавитьФайлВИндекс(ФайлВерсий.ПолноеИмя);
		ГитРепозиторий.Закоммитить("Изменена версия в файле VERSION");
	КонецЕсли;

КонецПроцедуры // ВыполнитьКоманду


Функция ИмяФункции()Экспорт
	
КонецФункции