
Перем Лог;

Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Опция("u storage-user", "", "пользователь хранилища конфигурации").ТСтрока().ВОкружении("GITSYNC_STORAGE_USER").ПоУмолчанию("Администратор");
	Команда.Опция("p storage-pwd", "", "пароль пользователя хранилища конфигурации").ТСтрока().ВОкружении("GITSYNC_STORAGE_PASSWORD GITSYNC_STORAGE_PWD");
	Команда.Опция("f format", "Hierarchical", "<Hierarchical|plain>").ТСтрока().ВОкружении("GITSYNC_FORMAT").ПоУмолчанию("Hierarchical");

	Команда.Аргумент("PATH", "", "Путь к хранилищу конфигурации 1С.").ТСтрока().ВОкружении("GITSYNC_STORAGE_PATH");
	Команда.Аргумент("WORKDIR", "", "Каталог исходников внутри локальной копии git-репозитария.")
							.ТСтрока()
							.ВОкружении("GITSYNC_WORKDIR")
							.Обязательный(Ложь)
							.ПоУмолчанию(ТекущийКаталог());
	
	Команда.УстановитьДействиеПередВыполнением(ПараметрыПриложения);
	Команда.УстановитьДействиеПослеВыполнения(ПараметрыПриложения);

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	Лог.Информация("Начинаю синхронизацию хранилища 1С и репозитария GIT");
	
	ОбщиеПараметры = ПараметрыПриложения.Параметры();
	МенеджерПлагинов = ОбщиеПараметры.МенеджерПлагинов;
	
	ПутьКХранилищу			= Команда.ЗначениеАргумента("PATH");
	ЛокальныйКаталогГит		= Команда.ЗначениеАргумента("WORKDIR");
	
	ПользовательХранилища		= Команда.ЗначениеОпции("--storage-user");
	ПарольПользователяХранилища	= Команда.ЗначениеОпции("--storage-pwd");

	ФорматВыгрузки				= Команда.ЗначениеОпции("--format");
	
	ФайлЛокальныйКаталогГит = Новый Файл(ЛокальныйКаталогГит);
	ЛокальныйКаталогГит = ФайлЛокальныйКаталогГит.ПолноеИмя;

	Лог.Отладка("ПутьКХранилищу = " + ПутьКХранилищу);
	Лог.Отладка("ЛокальныйКаталогГит = " + ЛокальныйКаталогГит);
	Лог.Отладка("ФорматВыгрузки = " + ФорматВыгрузки);
	
	Распаковщик = Новый МенеджерСинхронизации(ПараметрыПриложения, МенеджерПлагинов);
	Распаковщик.ВерсияПлатформы = ОбщиеПараметры.ВерсияПлатформы;
	Распаковщик.УстановитьАвторизациюВХранилищеКонфигурации(ПользовательХранилища, ПарольПользователяХранилища);
	Лог.Информация("Синхронизация изменений с хранилищем");
	Распаковщик.СинхронизироватьХранилищеКонфигурацийСГит(ЛокальныйКаталогГит,
	 						ПутьКХранилищу, 
	 						ФорматВыгрузки, 
	 						"",
	 						"");

	Лог.Информация("Синхронизация завершена");
		
КонецПроцедуры

Функция ИмяФункции() Экспорт
	
КонецФункции

Лог = ПараметрыПриложения.Лог();