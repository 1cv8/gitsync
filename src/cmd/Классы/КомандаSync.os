
Перем Лог;

Процедура ОписаниеКоманды(Команда) Экспорт
	
	ИмяВетки 	= Команда.Опция("b branch", "master", "<имя ветки git>");
	Формат 		= Команда.Опция("f format", "Hierarchical", "<Hierarchical|plain>");
	
	ПутьКХранилищу 		= Команда.Аргумент("PATH", "", "Путь к хранилищю конфигурации 1С.");
	ЛокальныйКаталогГит = Команда.Аргумент("WORKDIR", "", "Каталог исходников внутри локальной копии git-репозитария.");
	URLРепозитория 		= Команда.Аргумент("URL", "", "Адрес удаленного репозитория GIT.");
	
	Команда.УстановитьДействиеПередВыполнением(ПараметрыПриложения);
	Команда.УстановитьДействиеПослеВыполнения(ПараметрыПриложения);

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	Лог.Информация("Начинаю синхронизацию хранилища 1С и репозитария GIT");

	ОбщиеПараметры = ПараметрыПриложения.Параметры();
	МенеджерПлагинов = ОбщиеПараметры.МенеджерПлагинов;
	
	ПутьКХранилищу			= Команда.ЗначениеАргумента("PATH");
	URLРепозитория			= Команда.ЗначениеАргумента("URL");
	ЛокальныйКаталогГит		= Команда.ЗначениеАргумента("WORKDIR");
	Формат					= Команда.ЗначениеОпции("-f");
	ИмяВетки				= Команда.ЗначениеОпции("-b");
	
	ФайлЛокальныйКаталогГит = Новый Файл(ЛокальныйКаталогГит);
	ЛокальныйКаталогГит = ФайлЛокальныйКаталогГит.ПолноеИмя;

	Лог.Отладка("ПутьКХранилищу = " + ПутьКХранилищу);
	Лог.Отладка("URLРепозитория = " + URLРепозитория);
	Лог.Отладка("ЛокальныйКаталогГит = " + ЛокальныйКаталогГит);
	Лог.Отладка("Формат = " + Формат);
	Лог.Отладка("ИмяВетки = " + ИмяВетки);
	
	Распаковщик = Новый МенеджерСинхронизации(ПараметрыПриложения, МенеджерПлагинов);

	Лог.Информация("Синхронизация изменений с хранилищем");
	Распаковщик.СинхронизироватьХранилищеКонфигурацийСГит(ЛокальныйКаталогГит,
	 						ПутьКХранилищу, 
	 						Формат, 
	 						URLРепозитория,
	 						ИмяВетки);

	Лог.Информация("Синхронизация завершена");
		
КонецПроцедуры

Функция ИмяФункции()Экспорт
	
КонецФункции

Лог = ПараметрыПриложения.Лог();