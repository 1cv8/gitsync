
Перем Лог;

Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Опция("u storage-user", "", "пользователь хранилища конфигурации")
					.ТСтрока()
					.ВОкружении("GITSYNC_STORAGE_USER")
					.ПоУмолчанию("Администратор");

	Команда.Опция("p storage-pwd", "", "пароль пользователя хранилища конфигурации")
					.ТСтрока()
					.ВОкружении("GITSYNC_STORAGE_PASSWORD GITSYNC_STORAGE_PWD");
	
	Команда.Аргумент("PATH", "", "Путь к хранилищу конфигурации 1С.")
					.ТСтрока()
					.ВОкружении("GITSYNC_STORAGE_PATH");
	Команда.Аргумент("WORKDIR", "", "Каталог исходников внутри локальной копии git-репозитария.")
					.ТСтрока()
					.ВОкружении("GITSYNC_WORKDIR")
					.Обязательный(Ложь)
					.ПоУмолчанию(ТекущийКаталог());

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	Лог.Информация("Начало выполнение команды <sync>");
	
	ПутьКХранилищу			= Команда.ЗначениеАргумента("PATH");
	ЛокальныйКаталогГит		= Команда.ЗначениеАргумента("WORKDIR");
	
	ПользовательХранилища		= Команда.ЗначениеОпции("--storage-user");
	ПарольПользователяХранилища	= Команда.ЗначениеОпции("--storage-pwd");

	ФайлЛокальныйКаталогГит = Новый Файл(ЛокальныйКаталогГит);
	ЛокальныйКаталогГит = ФайлЛокальныйКаталогГит.ПолноеИмя;

	Лог.Отладка("ПутьКХранилищу = " + ПутьКХранилищу);
	Лог.Отладка("ЛокальныйКаталогГит = " + ЛокальныйКаталогГит);
	
	ОбщиеПараметры = ПараметрыПриложения.Параметры();
	МенеджерПлагинов = ОбщиеПараметры.УправлениеПлагинами;
	
	ОбработчикПодписок = МенеджерПлагинов.НовыйМенеджерПодписок();

	Распаковщик = Новый МенеджерСинхронизации();
	Распаковщик.ВерсияПлатформы(ОбщиеПараметры.ВерсияПлатформы)
			   .ПодпискиНаСобытия(ОбработчикПодписок)
			   .УровеньЛога(ПараметрыПриложения.УровеньЛога())
			   .АвторизацияВХранилищеКонфигурации(ПользовательХранилища, ПарольПользователяХранилища)
			   .Синхронизировать(ЛокальныйКаталогГит, ПутьКХранилищу);

	Лог.Информация("Завершено выполнение команды <sync>");
		
КонецПроцедуры

Лог = ПараметрыПриложения.Лог();