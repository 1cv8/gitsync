#Использовать logos
#Использовать tempfiles

Перем ЛогПриложения;
Перем ОбщиеПараметры;
Перем ОбщийКаталогДанныхПриложения;

Процедура Инициализация()
	ОбщиеПараметры = Новый Структура("Плагины, ВерсияПлатформы, ВыводДополнительнойИнформации, ДоменПочты", Новый Массив, "8.3", Ложь, "localhost");
КонецПроцедуры

Процедура УстановитьВерсиюПлатформы(ВерсияПлатформы) Экспорт
	ОбщиеПараметры.Вставить("ВерсияПлатформы", ВерсияПлатформы);
КонецПроцедуры

Процедура УстановитьПлагины(Знач Плагины) Экспорт
	
	// ОбщиеПараметры.МенеджерПлагинов.УстановитьАктивныеПлагины(Плагины);

КонецПроцедуры

Процедура УстановитьКаталогПлагинов(Знач ПутьККаталогуПлагинов) Экспорт
	
	ЛогПриложения.Отладка("Устанавливаю каталог плагинов <%1>", ПутьККаталогуПлагинов);
	
	Если ЗначениеЗаполнено(ПутьККаталогуПлагинов) Тогда
	
		ОбщиеПараметры.УправлениеПлагинами.УстановитьКаталогПлагинов(ПутьККаталогуПлагинов);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьРежимВыводаДополнительнойИнформации(Знач ВыводДополнительнойИнформации) Экспорт
	ОбщиеПараметры.Вставить("ВыводДополнительнойИнформации", ВыводДополнительнойИнформации);
КонецПроцедуры

Процедура УстановитьДоменПочты(Знач ДоменПочты) Экспорт
	ОбщиеПараметры.Вставить("ДоменПочты", ДоменПочты);
КонецПроцедуры

Функция ПолучитьЛокальныйКаталогДанныхПриложения()

	Если ЗначениеЗаполнено(ОбщийКаталогДанныхПриложения) Тогда
		Возврат ОбщийКаталогДанныхПриложения;
	КонецЕсли;

	СистемнаяИнформация = Новый СистемнаяИнформация;
	ОбщийКаталогДанныхПриложений = СистемнаяИнформация.ПолучитьПутьПапки(СпециальнаяПапка.ЛокальныйКаталогДанныхПриложений);

	ОбщийКаталогДанныхПриложения = ОбъединитьПути(ОбщийКаталогДанныхПриложений, ИмяПриложения());
	Возврат ОбщийКаталогДанныхПриложения;

КонецФункции

Функция КаталогПлагинов()
	Возврат ОбъединитьПути(ПолучитьЛокальныйКаталогДанныхПриложения(), "plugins");
КонецФункции

Функция ФайлВключенныхПлагинов()
	Возврат ОбъединитьПути(ПолучитьЛокальныйКаталогДанныхПриложения(), "enable-pluings.json");
КонецФункции

Процедура ПодготовитьПлагины(Знач Приложение) Экспорт
	
	МенеджерПлагинов = Новый УправлениеПлагинами;
	МенеджерПлагинов.УстановитьКаталогПлагинов(КаталогПлагинов());
	МенеджерПлагинов.УстановитьФайлВключенныхПлагинов(ФайлВключенныхПлагинов());
	МенеджерПлагинов.ЗагрузитьПлагины();
	
	ОбработчикПодписок = МенеджерПлагинов.НовыйМенеджерПодписок();

	ОсновнаяКомандаПриложения = Приложение.ПолучитьКоманду();
	ПодкомандыПриложения = ОсновнаяКомандаПриложения.ПолучитьПодкоманды();

	ОбработчикПодписок.ПриРегистрацииКомандыПриложения(ОсновнаяКомандаПриложения.ПолучитьИмяКоманды(),
													  ОсновнаяКомандаПриложения,
													  Неопределено);

	Для каждого Подкоманда Из ПодкомандыПриложения Цикл
		ОбработчикПодписок.ПриРегистрацииКомандыПриложения(Подкоманда.ПолучитьИмяКоманды(), Подкоманда, Неопределено);
	КонецЦикла;

	ОбщиеПараметры.Вставить("УправлениеПлагинами", МенеджерПлагинов);

КонецПроцедуры

Процедура УстановитьВременныйКаталог(Знач Каталог) Экспорт
		
	Если ЗначениеЗаполнено(Каталог) Тогда
		
		БазовыйКаталог  = Каталог;
		ФайлБазовыйКаталог = Новый Файл(БазовыйКаталог);
		Если Не (ФайлБазовыйКаталог.Существует()) Тогда
			
			СоздатьКаталог(ФайлБазовыйКаталог.ПолноеИмя);
			
		КонецЕсли;
		
		ВременныеФайлы.БазовыйКаталог = ФайлБазовыйКаталог.ПолноеИмя;
		
	КонецЕсли;

КонецПроцедуры

Функция РезультатыКоманд() Экспорт

	РезультатыКоманд = Новый Структура;
	РезультатыКоманд.Вставить("Успех", 0);
	РезультатыКоманд.Вставить("НеверныеПараметры", 5);
	РезультатыКоманд.Вставить("ОшибкаВремениВыполнения", 1);
	
	Возврат РезультатыКоманд;

КонецФункции // РезультатыКоманд

Процедура УстановитьРежимОтладкиПриНеобходимости(Знач РежимОтладки) Экспорт
	
	Если РежимОтладки Тогда
		
		ЛогПриложения.УстановитьУровень(УровниЛога.Отладка);
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьРежимОтладкиПриНеобходимости

Процедура ПередВыполнениемКоманды(Знач Команда) Экспорт

	ЛогПриложения.Отладка("Выполняю получение параметров команды в плагинах");
	ОбработчикПодписок = ОбщиеПараметры.УправлениеПлагинами.НовыйМенеджерПодписок();
	ОбработчикПодписок.ПриПолученииПараметров(Команда.ПараметрыКоманды(), Новый Соответствие);

КонецПроцедуры

Функция Параметры() Экспорт
	Возврат ОбщиеПараметры;
КонецФункции

Функция Лог() Экспорт
	
	Если ЛогПриложения = Неопределено Тогда
		ЛогПриложения = Логирование.ПолучитьЛог(ИмяЛогаПриложения());
		
		//ВыводПоУмолчанию = Новый ВыводЛогаВКонсоль();
		
		//ЛогПриложения.ДобавитьСпособВывода(ВыводПоУмолчанию, УровниЛога.Отладка);
		
	КонецЕсли;

	Возврат ЛогПриложения;

КонецФункции

Функция ИмяЛогаПриложения() Экспорт
	Возврат "oscript.app."+ИмяПриложения();
КонецФункции

Функция ИмяПриложения() Экспорт

	Возврат "gitsync";
		
КонецФункции

Функция Версия() Экспорт
	
	Возврат "3.0.0-beta";
			
КонецФункции

Инициализация();
